<!DOCTYPE html>
<html>
<head>
    <title>the wakatime app thingy</title>
<!--    <meta http-equiv="refresh" content="60">-->
</head>
<style>
    @font-face {
        font-family: 'Phantom Sans';
        src: url('https://assets.hackclub.com/fonts/Phantom_Sans_0.7/Regular.woff')
        format('woff'),
        url('https://assets.hackclub.com/fonts/Phantom_Sans_0.7/Regular.woff2')
        format('woff2');
        font-weight: normal;
        font-style: normal;
        font-display: swap;
    }
    @font-face {
        font-family: 'Phantom Sans';
        src: url('https://assets.hackclub.com/fonts/Phantom_Sans_0.7/Italic.woff')
        format('woff'),
        url('https://assets.hackclub.com/fonts/Phantom_Sans_0.7/Italic.woff2')
        format('woff2');
        font-weight: normal;
        font-style: italic;
        font-display: swap;
    }
    @font-face {
        font-family: 'Phantom Sans';
        src: url('https://assets.hackclub.com/fonts/Phantom_Sans_0.7/Bold.woff')
        format('woff'),
        url('https://assets.hackclub.com/fonts/Phantom_Sans_0.7/Bold.woff2')
        format('woff2');
        font-weight: bold;
        font-style: normal;
        font-display: swap;
    }
    body{
        text-align: center;
        font-family: "Phantom Sans";
    }
    #output{
        font-size: 10rem;
    }
    #ninetyTonsOfTNT{
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
    }
</style>
<body>

    <select id="projSel">
        <% waka.projects.forEach(projects =>{%>
        <option value="<%=projects.name%>" data-time="<%=projects.text%>">
            <%=projects.name%>
        </option><%});%>
    </select>
    <div id="ninetyTonsOfTNT">
    <h1 id="output"></h1>
    </div>
    <script>
        async function fetchTheThingy(iLoveGivingUnintuitiveVariableNames){
            try{
                const res = await fetch("/api/data");
                const data = await res.json();
                const project = data.projects.find(p => p.name === iLoveGivingUnintuitiveVariableNames);
                return project?.text;
            }catch(err){
                console.log(`pain in the fucking ass: ${err}`);
                return null;
            }
        }

        async function updateTime(){
            const select = document.getElementById("projSel");
            const selOpt = select.options[select.selectedIndex];
            const projectName = selOpt.value;
            const latestTime = await fetchTheThingy(projectName);
            if(latestTime){
                document.getElementById("output").textContent = latestTime;
            }
        }

        document.querySelector("#projSel").addEventListener("change", updateTime);

        setInterval(updateTime, 60000);
    </script>
</body>
</html>