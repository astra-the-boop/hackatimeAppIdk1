<!DOCTYPE html>
<html>
<head>
    <title>the wakatime app thingy</title>
<!--    <meta http-equiv="refresh" content="60">-->
</head>
<style>
    @font-face {
        font-family: 'Phantom Sans';
        src: url('https://assets.hackclub.com/fonts/Phantom_Sans_0.7/Regular.woff')
        format('woff'),
        url('https://assets.hackclub.com/fonts/Phantom_Sans_0.7/Regular.woff2')
        format('woff2');
        font-weight: normal;
        font-style: normal;
        font-display: swap;
    }
    @font-face {
        font-family: 'Phantom Sans';
        src: url('https://assets.hackclub.com/fonts/Phantom_Sans_0.7/Italic.woff')
        format('woff'),
        url('https://assets.hackclub.com/fonts/Phantom_Sans_0.7/Italic.woff2')
        format('woff2');
        font-weight: normal;
        font-style: italic;
        font-display: swap;
    }
    @font-face {
        font-family: 'Phantom Sans';
        src: url('https://assets.hackclub.com/fonts/Phantom_Sans_0.7/Bold.woff')
        format('woff'),
        url('https://assets.hackclub.com/fonts/Phantom_Sans_0.7/Bold.woff2')
        format('woff2');
        font-weight: bold;
        font-style: normal;
        font-display: swap;
    }
    body{
        text-align: center;
        font-family: "Phantom Sans";
        background-color: #121217;
        color: snow;
    }
    b{
        font-size: 2rem;
        margin-top: 1rem
    }
    #output{
        font-size: 10rem;
    }
    #ninetyTonsOfTNT{
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
    }
    #ringWrapper{
        position: relative;
        width: 800px;
        height: 800px;
        margin: auto;
    }
    #ringWrapper h1{
        position: absolute;
        line-height: 1;
        margin: 0;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }
    select {
        box-sizing: border-box;
        margin: 0;
        min-width: 0;
        width: 10rem;
        padding: 8px;
        appearance: none;
        font-size: inherit;
        text-overflow: ellipsis;
        line-height: inherit;
        border-radius: 4px;
        background-color: #252429;
        color: #ffffff;
        font-family: inherit;
        margin: 1rem;
        border: 0;
        /*stolen from hc branding lmao*/
    }
    #fullscreen{
        position: absolute;
        top: 20px;
        right: 20px;
        z-index: 9999;
        padding: 0.6rem 1rem;
        font-size: 3rem;
        border: none;
        color: snow;
        background-color: transparent;
    }
    #fullscreen:hover{
        cursor: pointer;
    }
    #addProject{
        border: none;
        border-radius: 4px;
        padding: 0.5rem 1rem;
        font-size: inherit;
        font-family: "Phantom Sans";
        color: snow;
        background-color: #333;
    }
    #addProject:hover{
        cursor:pointer;
    }#removeProject{
         border: none;
         border-radius: 4px;
         padding: 0.5rem 1rem;
         font-size: inherit;
         font-family: "Phantom Sans";
         color: snow;
         background-color: #333;
     }
    #removeProject:hover{
        cursor:pointer;
    }
    #lightdark{
        position: absolute;
        top: 20px;
        left: 20px;
        z-index: 9999;
        padding: 0.6rem 1rem;
        font-size: 3rem;
        border: none;
        color: snow;
        background-color: transparent;
    }
    #lightdark:hover{
        cursor: pointer;
    }
    #theSecondOne{
        display:none;
    }
</style>
<body>
    <button id="lightdark">⏀</button>
    <button id="fullscreen">⛶</button>

    <select class="select" id="projSel">
        <% waka.projects.forEach(projects =>{%>
        <option value="<%=projects.name%>" data-time="<%=projects.text%>">
            <%=projects.name%>
        </option><%});%>
    </select> <div id="theSecondOne">+
     <select class="select" id="projSel2">
         <option value="">[None]</option>
         <% waka.projects.forEach(projects =>{%>
         <option value="<%=projects.name%>" data-time="<%=projects.text%>">
             <%=projects.name%>
         </option><%});%>
     </select></div>
    <button id="removeProject" style="display: none">Remove project</button>
    <button id="addProject">Add project</button>
    <div id="ninetyTonsOfTNT">
        <div id="ringWrapper">
            <svg width="800" height="800">
                <circle id="notCreativeEnough" cx="400" cy="400" r="382" stroke="#222" stroke-width="15" fill="none" />
                <circle id="outestRing"
                        cx="400" cy="400" r="382"
                        stroke="#ec3750" stroke-width="15" fill="none"
                        stroke-linecap="round"
                        transform="rotate(-90 400 400)"
                        stroke-dasharray="2400.18"
                        stroke-dashoffset="2400.18" />
                <circle id="toComeUpWith" cx="400" cy="400" r="360" stroke="#333" stroke-width="30" fill="none" />
                <circle id="outerRing"
                        cx="400" cy="400" r="360"
                        stroke="#a633d6" stroke-width="30" fill="none"
                        stroke-linecap="round"
                        transform="rotate(-90 400 400)"
                        stroke-dasharray="2324.78"
                        stroke-dashoffset="2324.78" />

                <circle id="properIdNames" cx="400" cy="400" r="320" stroke="#444" stroke-width="50" fill="none" />
                <circle id="progressRing"
                        cx="400" cy="400" r="320"
                        stroke="#338eda" stroke-width="50" fill="none"
                        stroke-linecap="round"
                        transform="rotate(-90 400 400)"
                        stroke-dasharray="2010.62"
                        stroke-dashoffset="2010.62" />
            </svg>


            <h1 id="output"></h1>
        </div>
    </div>
    <script>
        async function fetchTheThingy(iLoveGivingUnintuitiveVariableNames){
            try{
                const res = await fetch("/api/data");
                const data = await res.json();
                const project = data.projects.find(p => p.name === iLoveGivingUnintuitiveVariableNames);
                return {
                    text:project?.text,
                    seconds:project?.total_seconds
                };
            }catch(err){
                console.log(`pain in the fucking ass: ${err}`);
                return null;
            }
        }

        async function updateTime(){
            const select = document.getElementById("projSel");
            const selOpt = select.options[select.selectedIndex];
            const projectName = selOpt.value;
            const latestTime = await fetchTheThingy(projectName);
            const latestTimeElectricBoogaloo = await fetchTheThingy(document.getElementById("projSel2").options[document.getElementById("projSel2").selectedIndex].value);
            if(latestTime){
                if(document.getElementById("projSel2").value === ""){
                    document.getElementById("output").textContent = latestTime.text;
                    let segundo = latestTime.seconds % 3600;
                    document.getElementById("progressRing").style.strokeDashoffset = 2010.62 * (1 - segundo / 3600);
                    let segundoTheSequel = latestTime.seconds % 18000;
                    document.getElementById("outerRing").style.strokeDashoffset = 2324.78 * (1 - segundoTheSequel / 18000);
                    let segundoElectricBoogaloo = latestTime.seconds % 54000;
                    document.getElementById("outestRing").style.strokeDashoffset = 2400.1 * (1 - segundoElectricBoogaloo / 54000);
                }else{
                    document.getElementById("output").textContent = readThisFucker(latestTime.seconds + latestTimeElectricBoogaloo.seconds);
                    let segundo = (latestTime.seconds + latestTimeElectricBoogaloo.seconds) % 3600;
                    document.getElementById("progressRing").style.strokeDashoffset = 2010.62 * (1 - segundo / 3600);
                    let segundoTheSequel = (latestTime.seconds + latestTimeElectricBoogaloo.seconds) % 18000;
                    document.getElementById("outerRing").style.strokeDashoffset = 2324.78 * (1 - segundoTheSequel / 18000);
                    let segundoElectricBoogaloo = (latestTime.seconds + latestTimeElectricBoogaloo.seconds) % 54000;
                    document.getElementById("outestRing").style.strokeDashoffset = 2400.1 * (1 - segundoElectricBoogaloo / 54000);
                }}}

        document.querySelector("#projSel").addEventListener("change", updateTime);
        document.querySelector("#projSel2").addEventListener("change", updateTime);

        setInterval(updateTime, 60000);

        document.getElementById("fullscreen").addEventListener("click", ()=>
        {
            const ohoho = document.documentElement;
            if (!document.fullscreenElement){
                ohoho.requestFullscreen().catch(err=>{
                    console.error(`no full screen for you >:( ${err.message}`)
                })
            }else{
                document.exitFullscreen()
            }
        });

        document.getElementById("addProject").addEventListener("click", ()=>
        {
            document.getElementById("theSecondOne").style.display = "inline-block";
            document.getElementById("removeProject").style.display = "inline-block";
            document.getElementById("addProject").style.display = "none";
        });
        document.getElementById("removeProject").addEventListener("click", ()=>
        {
            document.getElementById("theSecondOne").style.display = "none";
            document.getElementById("removeProject").style.display = "none";
            document.getElementById("addProject").style.display = "inline-block";
            document.getElementById("projSel2").selectedIndex = 0;
            updateTime();
        });
        let lightmode = false;
        document.getElementById("lightdark").addEventListener("click", ()=>
        {
            if (!lightmode){
                lightmode = true;
                document.body.style.backgroundColor = "#dedede";
                document.body.style.color = "#121217";
                document.getElementById("fullscreen").style.color = "#121217";
                document.getElementById("lightdark").style.color = "#121217";
                document.getElementById("projSel").style.backgroundColor = "#cccccc";
                document.getElementById("projSel").style.color = "#252429";
                document.getElementById("projSel2").style.backgroundColor = "#cccccc";
                document.getElementById("projSel2").style.color = "#252429";
                document.getElementById("notCreativeEnough").style.stroke = "#ccc";
                document.getElementById("toComeUpWith").style.stroke = "#bbb";
                document.getElementById("properIdNames").style.stroke = "#aaa";
                document.getElementById("addProject").style.color = "#252429";
                document.getElementById("addProject").style.backgroundColor = "#bbb";

            }else{
                lightmode = false;
                document.body.style.backgroundColor = "#121217";
                document.body.style.color = "snow";
                document.getElementById("lightdark").style.color = "snow";
                document.getElementById("fullscreen").style.color = "snow";
                document.getElementById("projSel").style.backgroundColor = "#252429";
                document.getElementById("projSel").style.color = "#ffffff";
                document.getElementById("projSel2").style.backgroundColor = "#252429";
                document.getElementById("projSel2").style.color = "#ffffff";
                document.getElementById("notCreativeEnough").style.stroke = "#222";
                document.getElementById("toComeUpWith").style.stroke = "#333";
                document.getElementById("properIdNames").style.stroke = "#444";
                document.getElementById("addProject").style.color = "snow";
                document.getElementById("addProject").style.backgroundColor = "#333";
            }
        });

        function readThisFucker(segundo){
            //i hate math i hate math i hate math i hate math i hate math i hate math i hate math i hate math
            hrPart = Math.floor(segundo/3600);
            mPart = Math.floor(Math.floor(segundo % 3600)/60);
            return `${hrPart}h ${mPart}m`
        }
    </script>
</body>
</html>