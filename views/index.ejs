<!DOCTYPE html>
<html>
<head>
    <title>the wakatime app thingy</title>
<!--    <meta http-equiv="refresh" content="60">-->
</head>
<style>
    @font-face {
        font-family: 'Phantom Sans';
        src: url('https://assets.hackclub.com/fonts/Phantom_Sans_0.7/Regular.woff')
        format('woff'),
        url('https://assets.hackclub.com/fonts/Phantom_Sans_0.7/Regular.woff2')
        format('woff2');
        font-weight: normal;
        font-style: normal;
        font-display: swap;
    }
    @font-face {
        font-family: 'Phantom Sans';
        src: url('https://assets.hackclub.com/fonts/Phantom_Sans_0.7/Italic.woff')
        format('woff'),
        url('https://assets.hackclub.com/fonts/Phantom_Sans_0.7/Italic.woff2')
        format('woff2');
        font-weight: normal;
        font-style: italic;
        font-display: swap;
    }
    @font-face {
        font-family: 'Phantom Sans';
        src: url('https://assets.hackclub.com/fonts/Phantom_Sans_0.7/Bold.woff')
        format('woff'),
        url('https://assets.hackclub.com/fonts/Phantom_Sans_0.7/Bold.woff2')
        format('woff2');
        font-weight: bold;
        font-style: normal;
        font-display: swap;
    }
    body{
        text-align: center;
        font-family: "Phantom Sans";
        background-color: #121217;
        color: snow;
    }
    #output{
        font-size: 10rem;
    }
    #ninetyTonsOfTNT{
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
    }
    #ringWrapper{
        position: relative;
        width: 700px;
        height: 700px;
        margin: auto;
    }
    #ringWrapper h1{
        position: absolute;
        line-height: 1;
        margin: 0;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }
    select {
        box-sizing: border-box;
        margin: 0;
        min-width: 0;
        width: 30rem;
        padding: 8px;
        appearance: none;
        font-size: inherit;
        line-height: inherit;
        border-radius: 4px;
        background-color: #252429;
        color: #ffffff;
        font-family: inherit;
        border: 0;
        /*stolen from hc branding lmao*/
    }

</style>
<body>

    <select id="projSel">
        <% waka.projects.forEach(projects =>{%>
        <option value="<%=projects.name%>" data-time="<%=projects.text%>">
            <%=projects.name%>
        </option><%});%>
    </select>
    <div id="ninetyTonsOfTNT">
        <div id="ringWrapper">
            <svg width="700" height="700">
                <circle cx="350" cy="350" r="320" stroke="#eee" stroke-width="60" fill="none" />
                <circle id="progressRing"
                        cx="350" cy="350" r="320"
                        stroke="#a633d6" stroke-width="60" fill="none"
                        stroke-linecap="round"
                        transform="rotate(-90 350 350)"
                        stroke-dasharray="2010.62"
                        stroke-dashoffset="2010.62" />
            </svg>

            <h1 id="output"></h1>
        </div>
    </div>
    <script>
        async function fetchTheThingy(iLoveGivingUnintuitiveVariableNames){
            try{
                const res = await fetch("/api/data");
                const data = await res.json();
                const project = data.projects.find(p => p.name === iLoveGivingUnintuitiveVariableNames);
                return {
                    text:project?.text,
                    seconds:project?.total_seconds
                };
            }catch(err){
                console.log(`pain in the fucking ass: ${err}`);
                return null;
            }
        }

        async function updateTime(){
            const select = document.getElementById("projSel");
            const selOpt = select.options[select.selectedIndex];
            const projectName = selOpt.value;
            const latestTime = await fetchTheThingy(projectName);
            if(latestTime){
                document.getElementById("output").textContent = latestTime.text;
                let segundo = latestTime.seconds % 3600;
                document.getElementById("progressRing").style.strokeDashoffset = 2010.62 * (1 - segundo / 3600);
            }

        }

        document.querySelector("#projSel").addEventListener("change", updateTime);

        setInterval(updateTime, 60000);
    </script>
</body>
</html>